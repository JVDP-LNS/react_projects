{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\WebDevFiles\\\\React\\\\TicTacToe0\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SquareComp = ({\n  cellValue,\n  handleOnClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: handleOnClick,\n    children: cellValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n_c = SquareComp;\nexport default function Board() {\n  _s();\n  const [turn, setTurn] = useState('X');\n  const [cells, setCells] = useState(Array(9).fill(' '));\n  const handleClick = i => {\n    if (cells[i] !== ' ' || calculateWinner(cells) != ' ') return;\n    const newCells = cells.slice();\n    newCells[i] = turn;\n    setCells(newCells);\n    if (turn == 'X') setTurn('O');else setTurn('X');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[0],\n        handleOnClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[1],\n        handleOnClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[2],\n        handleOnClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[3],\n        handleOnClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[4],\n        handleOnClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[5],\n        handleOnClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[6],\n        handleOnClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[7],\n        handleOnClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SquareComp, {\n        cellValue: cells[8],\n        handleOnClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"sTcBu6IyleJ4a1AV+ubc5+zOiKo=\");\n_c2 = Board;\nfunction calculateWinner(cells) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n      return cells[a];\n    }\n  }\n  return ' ';\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"SquareComp\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SquareComp","cellValue","handleOnClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","turn","setTurn","cells","setCells","Array","fill","handleClick","i","calculateWinner","newCells","slice","_c2","lines","length","a","b","c","$RefreshReg$"],"sources":["D:/Coding/WebDevFiles/React/TicTacToe0/src/App.js"],"sourcesContent":["\nimport { useState } from 'react'\n\nconst SquareComp = ({cellValue, handleOnClick}) => {\n  return <button className=\"square\" onClick={handleOnClick}>{cellValue}</button>;\n}\n\nexport default function Board() {\n\n  const [turn, setTurn] = useState('X');\n  const [cells, setCells] = useState(Array(9).fill(' '));\n\n  const handleClick = (i) => {\n    if(cells[i] !== ' ' || calculateWinner(cells) != ' ')\n      return;\n    const newCells = cells.slice();\n    newCells[i] = turn;\n    setCells(newCells);\n    if(turn == 'X')\n      setTurn('O');\n    else\n      setTurn('X');  \n  }\n\n  return <>\n    <div className='board-row'>\n      <SquareComp cellValue={cells[0]} handleOnClick={() => handleClick(0)}/>\n      <SquareComp cellValue={cells[1]} handleOnClick={() => handleClick(1)}/>\n      <SquareComp cellValue={cells[2]} handleOnClick={() => handleClick(2)}/>\n    </div>\n    <div className='board-row'>\n      <SquareComp cellValue={cells[3]} handleOnClick={() => handleClick(3)}/>\n      <SquareComp cellValue={cells[4]} handleOnClick={() => handleClick(4)}/>\n      <SquareComp cellValue={cells[5]} handleOnClick={() => handleClick(5)}/>\n    </div>\n    <div className='board-row'>\n      <SquareComp cellValue={cells[6]} handleOnClick={() => handleClick(6)}/>\n      <SquareComp cellValue={cells[7]} handleOnClick={() => handleClick(7)}/>\n      <SquareComp cellValue={cells[8]} handleOnClick={() => handleClick(8)}/>\n    </div>\n  </>;\n}\n\nfunction calculateWinner(cells) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {\n      return cells[a];\n    }\n  }\n  return ' ';\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}